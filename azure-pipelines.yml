# Trigger on every push to the main branch
trigger:
- main

# Define a pipeline-level variable for the build configuration
variables:
  buildConfiguration: 'Release'

# A pipeline is composed of one or more stages
stages:
# STAGE 1: Build the application
- stage: Build
  displayName: 'Build Stage'
  jobs:
  # A stage is composed of one or more jobs
  - job: BuildJob
    displayName: 'Build React Todo App'
    pool:
      # vmImage: 'ubuntu-latest'
      name: Default # self-hosted agent pool

    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '20.x'
      displayName: 'Install Node.js'

    - script: npm install
      displayName: 'Install dependencies'

    - script: npm run build
      displayName: 'Build project'

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: 'build' # Vite 'dist' klasörüne build eder. Create-React-App 'build' kullanır.
        ArtifactName: 'drop'
        publishLocation: 'Container'
      displayName: 'Publish build artifacts'

# STAGE 2: Deploy the application
- stage: Deploy
  displayName: 'Deploy Stage'
  # This stage will only run if the 'Build' stage succeeds
  dependsOn: Build
  condition: succeeded()
  jobs:
  - job: DeployJob
    displayName: 'Deploy to Azure Static Web Apps'
    pool:
      # vmImage: 'ubuntu-latest'
      name: Default # self-hosted agent pool
    steps:
    # This is the task that handles the deployment
    - task: AzureStaticWebApp@0
      inputs:
        # The location of the build output (our artifact)
        app_location: 'build' # CRA için doğru path
        # The deployment token we saved as a secret variable
        azure_static_web_apps_api_token: '$(AZURE_STATIC_WEB_APPS_API_TOKEN)'